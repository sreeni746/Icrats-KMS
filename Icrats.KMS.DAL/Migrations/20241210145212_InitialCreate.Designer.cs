// <auto-generated />
using System;
using Icrats.KMS.DAL.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Icrats.KMS.DAL.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20241210145212_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Icrats.KMS.DAL.Entities.Custodian", b =>
                {
                    b.Property<int>("CustodianId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("CustodianId"));

                    b.Property<DateTime>("AssignedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("CustodianTypeId")
                        .HasColumnType("integer");

                    b.Property<string>("Status")
                        .HasColumnType("text");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("CustodianId");

                    b.HasIndex("CustodianTypeId");

                    b.HasIndex("UserId");

                    b.ToTable("Custodians");
                });

            modelBuilder.Entity("Icrats.KMS.DAL.Entities.CustodianType", b =>
                {
                    b.Property<int>("CustodianTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("CustodianTypeId"));

                    b.Property<string>("CustodianTypeDescription")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<string>("CustodianTypeName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.HasKey("CustodianTypeId");

                    b.HasIndex("CustodianTypeName")
                        .IsUnique();

                    b.ToTable("CustodianTypes");
                });

            modelBuilder.Entity("Icrats.KMS.DAL.Entities.Door", b =>
                {
                    b.Property<int>("DoorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("DoorId"));

                    b.Property<string>("DoorCode")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("DoorDescription")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<int>("DoorTypeId")
                        .HasColumnType("integer");

                    b.Property<int>("FacilityId")
                        .HasColumnType("integer");

                    b.HasKey("DoorId");

                    b.HasIndex("DoorTypeId");

                    b.HasIndex("FacilityId");

                    b.ToTable("Doors");
                });

            modelBuilder.Entity("Icrats.KMS.DAL.Entities.DoorType", b =>
                {
                    b.Property<int>("DoorTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("DoorTypeId"));

                    b.Property<string>("DoorTypeDescription")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<string>("DoorTypeName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.HasKey("DoorTypeId");

                    b.HasIndex("DoorTypeName")
                        .IsUnique();

                    b.ToTable("DoorTypes");
                });

            modelBuilder.Entity("Icrats.KMS.DAL.Entities.Facility", b =>
                {
                    b.Property<int>("FacilityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("FacilityId"));

                    b.Property<string>("FacilityAddress")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("character varying(250)");

                    b.Property<string>("FacilityLocation")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("FacilityName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.HasKey("FacilityId");

                    b.ToTable("Facilities");
                });

            modelBuilder.Entity("Icrats.KMS.DAL.Entities.Key", b =>
                {
                    b.Property<int>("KeyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("KeyId"));

                    b.Property<string>("Brand")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("KeyCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<int>("LockId")
                        .HasColumnType("integer");

                    b.Property<string>("Stampings")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.HasKey("KeyId");

                    b.HasIndex("LockId");

                    b.ToTable("Keys");
                });

            modelBuilder.Entity("Icrats.KMS.DAL.Entities.KeySpareKeyMap", b =>
                {
                    b.Property<int>("KeySpareKeyMapId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("KeySpareKeyMapId"));

                    b.Property<DateTime>("AssignedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("KeyId")
                        .HasColumnType("integer");

                    b.Property<int>("SpareKeyId")
                        .HasColumnType("integer");

                    b.HasKey("KeySpareKeyMapId");

                    b.HasIndex("KeyId");

                    b.HasIndex("SpareKeyId");

                    b.ToTable("KeySpareKeyMap");
                });

            modelBuilder.Entity("Icrats.KMS.DAL.Entities.Lock", b =>
                {
                    b.Property<int>("LockId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("LockId"));

                    b.Property<int>("DoorId")
                        .HasColumnType("integer");

                    b.Property<string>("LockCode")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.HasKey("LockId");

                    b.HasIndex("DoorId");

                    b.ToTable("Locks");
                });

            modelBuilder.Entity("Icrats.KMS.DAL.Entities.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("UserId"));

                    b.Property<string>("UserName")
                        .HasColumnType("text");

                    b.HasKey("UserId");

                    b.ToTable("User");
                });

            modelBuilder.Entity("Icrats.KMS.DAL.Entities.Custodian", b =>
                {
                    b.HasOne("Icrats.KMS.DAL.Entities.CustodianType", "CustodianType")
                        .WithMany()
                        .HasForeignKey("CustodianTypeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Icrats.KMS.DAL.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CustodianType");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Icrats.KMS.DAL.Entities.Door", b =>
                {
                    b.HasOne("Icrats.KMS.DAL.Entities.DoorType", "DoorType")
                        .WithMany("Doors")
                        .HasForeignKey("DoorTypeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Icrats.KMS.DAL.Entities.Facility", "Facility")
                        .WithMany("Doors")
                        .HasForeignKey("FacilityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DoorType");

                    b.Navigation("Facility");
                });

            modelBuilder.Entity("Icrats.KMS.DAL.Entities.Key", b =>
                {
                    b.HasOne("Icrats.KMS.DAL.Entities.Lock", "Lock")
                        .WithMany("Keys")
                        .HasForeignKey("LockId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Lock");
                });

            modelBuilder.Entity("Icrats.KMS.DAL.Entities.KeySpareKeyMap", b =>
                {
                    b.HasOne("Icrats.KMS.DAL.Entities.Key", "Key")
                        .WithMany()
                        .HasForeignKey("KeyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Icrats.KMS.DAL.Entities.Key", "SpareKey")
                        .WithMany()
                        .HasForeignKey("SpareKeyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Key");

                    b.Navigation("SpareKey");
                });

            modelBuilder.Entity("Icrats.KMS.DAL.Entities.Lock", b =>
                {
                    b.HasOne("Icrats.KMS.DAL.Entities.Door", "Door")
                        .WithMany("Locks")
                        .HasForeignKey("DoorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Door");
                });

            modelBuilder.Entity("Icrats.KMS.DAL.Entities.Door", b =>
                {
                    b.Navigation("Locks");
                });

            modelBuilder.Entity("Icrats.KMS.DAL.Entities.DoorType", b =>
                {
                    b.Navigation("Doors");
                });

            modelBuilder.Entity("Icrats.KMS.DAL.Entities.Facility", b =>
                {
                    b.Navigation("Doors");
                });

            modelBuilder.Entity("Icrats.KMS.DAL.Entities.Lock", b =>
                {
                    b.Navigation("Keys");
                });
#pragma warning restore 612, 618
        }
    }
}
